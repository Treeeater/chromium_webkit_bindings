/*
 * THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT EDIT.
 *
 * This file was generated by the make_jni_lists.py script.
 *
 * Copyright (C) 2009 Google Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#define NO_IMPLICIT_ATOMICSTRING

#include "bindings/V8CSSMediaRule.cpp"
#include "bindings/V8ClientRect.cpp"
#include "bindings/V8ClientRectList.cpp"
#include "bindings/V8DOMWindow.cpp"
#include "bindings/V8HTMLAllCollection.cpp"
#include "bindings/V8HTMLFrameSetElement.cpp"
#include "bindings/V8HTMLMenuElement.cpp"
#include "bindings/V8HTMLModElement.cpp"
#include "bindings/V8HTMLTableSectionElement.cpp"
#include "bindings/V8HTMLTitleElement.cpp"
#include "bindings/V8MouseEvent.cpp"
#include "bindings/V8Text.cpp"

#if ENABLE(3D_CANVAS)
#include "bindings/V8Int32Array.cpp"
#include "bindings/V8Int8Array.cpp"
#include "bindings/V8WebGLContextAttributes.cpp"
#endif

#if ENABLE(BLOB)
#include "bindings/V8FileReader.cpp"
#endif

#if ENABLE(BLOB) || ENABLE(FILE_WRITER)
#include "bindings/V8FileError.cpp"
#endif

#if ENABLE(DEVICE_ORIENTATION)
#include "bindings/V8DeviceMotionEvent.cpp"
#endif

#if ENABLE(FILE_SYSTEM)
#include "bindings/V8DirectoryEntry.cpp"
#include "bindings/V8Entry.cpp"
#include "bindings/V8EntryArray.cpp"
#endif

#if ENABLE(FILE_WRITER)
#include "bindings/V8FileWriter.cpp"
#endif

#if ENABLE(GEOLOCATION)
#include "bindings/V8Geolocation.cpp"
#endif

#if ENABLE(INDEXED_DATABASE)
#include "bindings/V8IDBAny.cpp"
#include "bindings/V8IDBIndex.cpp"
#endif

#if ENABLE(JAVASCRIPT_DEBUGGER)
#include "bindings/V8ScriptProfile.cpp"
#include "bindings/V8ScriptProfileNode.cpp"
#endif

#if ENABLE(NOTIFICATIONS)
#include "bindings/V8Notification.cpp"
#endif

#if ENABLE(PROGRESS_TAG)
#include "bindings/V8HTMLProgressElement.cpp"
#endif

#if ENABLE(SHARED_WORKERS)
#include "bindings/V8SharedWorker.cpp"
#include "bindings/V8SharedWorkerContext.cpp"
#endif

#if ENABLE(SVG)
#include "bindings/V8SVGAnimatedBoolean.cpp"
#include "bindings/V8SVGAnimatedPoints.cpp"
#include "bindings/V8SVGClipPathElement.cpp"
#include "bindings/V8SVGElementInstance.cpp"
#include "bindings/V8SVGElementInstanceList.cpp"
#include "bindings/V8SVGException.cpp"
#include "bindings/V8SVGPolygonElement.cpp"
#include "bindings/V8SVGPreserveAspectRatio.cpp"
#include "bindings/V8SVGSVGElement.cpp"
#include "bindings/V8SVGZoomEvent.cpp"
#endif

#if ENABLE(SVG) && ENABLE(FILTERS)
#include "bindings/V8SVGFEGaussianBlurElement.cpp"
#endif

#if ENABLE(SVG) && ENABLE(SVG_FONTS)
#include "bindings/V8SVGFontFaceSrcElement.cpp"
#include "bindings/V8SVGHKernElement.cpp"
#endif

#if ENABLE(VIDEO)
#include "bindings/V8HTMLAudioElement.cpp"
#include "bindings/V8HTMLSourceElement.cpp"
#endif

#if ENABLE(WEB_TIMING)
#include "bindings/V8Performance.cpp"
#endif

#if ENABLE(WORKERS)
#include "bindings/V8WorkerLocation.cpp"
#endif

#if ENABLE(XPATH)
#include "bindings/V8XPathNSResolver.cpp"
#include "bindings/V8XPathResult.cpp"
#endif
